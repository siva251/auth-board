{"version":3,"file":"static/js/161.37d7ea15.chunk.js","mappings":"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","sources":["pages/UserFormPage.js","components/Loader.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, editUser, loadUser, clearSelectedUser } from \"../store/usersSlice\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\n\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Email is required\"),\n  first_name: Yup.string()\n    .required(\"First name is required\")\n    .max(50, \"First name cannot be more than 50 characters\")\n    .matches(/^[a-zA-Z\\s]*$/, \"First name should not contain special characters or numbers\"),\n  last_name: Yup.string()\n    .required(\"Last name is required\")\n    .max(50, \"Last name cannot be more than 50 characters\")\n    .matches(/^[a-zA-Z\\s]*$/, \"Last name should not contain special characters or numbers\"),\n  avatar: Yup.string()\n    .url(\"Invalid URL\")\n    .required(\"Profile Image Link is required\"),\n});\n\nconst UserFormPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const { selectedUser, loading, isProcessingAction } = useSelector(\n    (state) => state.users\n  );\n\n  const [showFirstNameRules, setShowFirstNameRules] = useState(false);\n  const [showLastNameRules, setShowLastNameRules] = useState(false);\n\n  useEffect(() => {\n    if (params.id) {\n      dispatch(loadUser(params.id));\n    } else {\n      // Clear the selected user state when navigating to the create page\n      dispatch(clearSelectedUser());\n    }\n  }, [dispatch, params.id]);\n\n  const initialValues = {\n    email: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    avatar: \"\",\n  };\n\n  if (params.id && loading) {\n    return <Loader />;\n  }\n\n  const formInitialValues = selectedUser ?\n    {\n      email: selectedUser.email || \"\",\n      first_name: selectedUser.first_name || \"\",\n      last_name: selectedUser.last_name || \"\",\n      avatar: selectedUser.avatar || \"\",\n    } : initialValues;\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      if (params.id) {\n        await dispatch(editUser({ id: params.id, payload: values })).unwrap();\n      } else {\n        await dispatch(addUser(values)).unwrap();\n      }\n      navigate(\"/users\");\n    } catch (error) {\n      console.error(\"Form submission failed:\", error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-8 \">\n      {isProcessingAction && <Loader />}\n      <div className=\"bg-white rounded-lg shadow-xl overflow-hidden dark:bg-gray-800\">\n        <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n          <h2 className=\"text-2xl font-bold text-gray-800 text-center relative py-2 dark:text-white\">\n            <span className=\"relative z-10\">\n              {params.id ? \"Edit User\" : \"Create New User\"}\n            </span>\n          </h2>\n        </div>\n        <div className=\"p-6\">\n          <Formik\n            initialValues={formInitialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n            enableReinitialize={true}\n          >\n            {({ isSubmitting, errors, touched }) => (\n              <Form className=\"flex flex-col gap-5 max-w-lg mx-auto\">\n                <div className=\"space-y-6\">\n                  {/* Email Field */}\n                  <label className=\"flex flex-col text-gray-700 font-medium dark:text-gray-300\">\n                    <span>Email<span className=\"text-red-500 font-bold ml-1\">*</span></span>\n                    <Field\n                      type=\"email\"\n                      name=\"email\"\n                      className=\"mt-1 p-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 ease-in-out dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                    {errors.email && touched.email && (\n                      <div className=\"text-red-500 text-sm mt-1\">{errors.email}</div>\n                    )}\n                  </label>\n\n                  {/* First Name Field with Tooltip */}\n                  <label className=\"flex flex-col text-gray-700 font-medium relative dark:text-gray-300\">\n                    <span className=\"flex items-center gap-1\">\n                      First Name<span className=\"text-red-500 font-bold ml-1\">*</span>\n                      <span\n                        className=\"relative\"\n                        onMouseEnter={() => setShowFirstNameRules(true)}\n                        onMouseLeave={() => setShowFirstNameRules(false)}\n                      >\n                        <AiOutlineInfoCircle size=\"18px\" className=\"text-gray-400 dark:text-gray-500\" />\n                        {showFirstNameRules && (\n                          <div className=\"absolute z-10 top-full left-0 mt-2 w-max p-2 rounded-md bg-gray-800 text-white text-sm shadow-lg dark:bg-gray-900\">\n                            <ul className=\"list-disc list-inside space-y-1\">\n                              <li>Max 50 characters</li>\n                              <li>No special characters or numbers</li>\n                            </ul>\n                          </div>\n                        )}\n                      </span>\n                    </span>\n                    <Field\n                      type=\"text\"\n                      name=\"first_name\"\n                      className=\"mt-1 p-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 ease-in-out dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                    {errors.first_name && touched.first_name && (\n                      <div className=\"text-red-500 text-sm mt-1\">{errors.first_name}</div>\n                    )}\n                  </label>\n\n                  {/* Last Name Field with Tooltip */}\n                  <label className=\"flex flex-col text-gray-700 font-medium relative dark:text-gray-300\">\n                    <span className=\"flex items-center gap-1\">\n                      Last Name<span className=\"text-red-500 font-bold ml-1\">*</span>\n                      <span\n                        className=\"relative\"\n                        onMouseEnter={() => setShowLastNameRules(true)}\n                        onMouseLeave={() => setShowLastNameRules(false)}\n                      >\n                        <AiOutlineInfoCircle size=\"18px\" className=\"text-gray-400 dark:text-gray-500\" />\n                        {showLastNameRules && (\n                          <div className=\"absolute z-10 top-full left-0 mt-2 w-max p-2 rounded-md bg-gray-800 text-white text-sm shadow-lg dark:bg-gray-900\">\n                            <ul className=\"list-disc list-inside space-y-1\">\n                              <li>Max 50 characters</li>\n                              <li>No special characters or numbers</li>\n                            </ul>\n                          </div>\n                        )}\n                      </span>\n                    </span>\n                    <Field\n                      type=\"text\"\n                      name=\"last_name\"\n                      className=\"mt-1 p-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 ease-in-out dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                    {errors.last_name && touched.last_name && (\n                      <div className=\"text-red-500 text-sm mt-1\">{errors.last_name}</div>\n                    )}\n                  </label>\n\n                  {/* Avatar Field */}\n                  <label className=\"flex flex-col text-gray-700 font-medium dark:text-gray-300\">\n                    <span>Profile Image Link<span className=\"text-red-500 font-bold ml-1\">*</span></span>\n                    <Field\n                      type=\"url\"\n                      name=\"avatar\"\n                      className=\"mt-1 p-2 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 ease-in-out dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                    />\n                    {errors.avatar && touched.avatar && (\n                      <div className=\"text-red-500 text-sm mt-1\">{errors.avatar}</div>\n                    )}\n                  </label>\n                </div>\n\n                <div className=\"flex justify-between gap-3 mt-4\">\n                  <button\n                    type=\"button\"\n                    className=\"px-4 py-2 rounded-lg border border-gray-400 bg-white text-gray-700 hover:bg-gray-100 transition-colors duration-300 ease-in-out dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-600\"\n                    onClick={() => navigate(\"/users\")}\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    className=\"px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 transition-colors duration-300 ease-in-out\"\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? \"Submitting...\" : (params.id ? \"Update\" : \"Create\")}\n                  </button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserFormPage;","// src/components/Loader.jsx\n\nimport React from \"react\";\nimport loadingGif from \"../Assets/loadingGif.gif\"; // Adjust path as needed\n\nconst Loader = () => {\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black/50 z-50 \">\n      <img src={loadingGif} alt=\"Loading...\" className=\"h-24 w-24\" />\n    </div>\n  );\n};\n\nexport default Loader;"],"names":["validationSchema","Yup","email","required","first_name","max","matches","last_name","avatar","url","UserFormPage","dispatch","useDispatch","navigate","useNavigate","params","useParams","selectedUser","loading","isProcessingAction","useSelector","state","users","showFirstNameRules","setShowFirstNameRules","useState","showLastNameRules","setShowLastNameRules","useEffect","id","loadUser","clearSelectedUser","_jsx","Loader","formInitialValues","_jsxs","className","children","Formik","initialValues","onSubmit","async","values","_ref","setSubmitting","editUser","payload","unwrap","addUser","error","console","enableReinitialize","_ref2","isSubmitting","errors","touched","Form","Field","type","name","onMouseEnter","onMouseLeave","AiOutlineInfoCircle","size","onClick","disabled","src","loadingGif","alt"],"sourceRoot":""}