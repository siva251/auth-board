{"version":3,"file":"static/js/944.76b3eaf9.chunk.js","mappings":"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","sources":["components/Loader.js","components/UserRow.js","components/UserCard.js","pages/UsersPage.js"],"sourcesContent":["// src/components/Loader.jsx\n\nimport React from \"react\";\nimport loadingGif from \"../Assets/loadingGif.gif\"; // Adjust path as needed\n\nconst Loader = () => {\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black/50 z-50 \">\n      <img src={loadingGif} alt=\"Loading...\" className=\"h-24 w-24\" />\n    </div>\n  );\n};\n\nexport default Loader;","import React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst UserRow = memo(({ user, onDelete }) => {\n  const avatarSrc = user.avatar ? user.avatar : `https://i.pravatar.cc/150?u=${user.id}`;\n  const [imgSrc, setImgSrc] = React.useState(avatarSrc);\n\n  const handleImageError = () => {\n    setImgSrc(\n      `https://ui-avatars.com/api/?name=${user.first_name}+${user.last_name}&background=random&color=fff`\n    );\n  };\n\n  return (\n    <tr className=\"border-b border-gray-200 dark:border-gray-700 block md:table-row mb-4 md:mb-0\">\n      <td className=\"p-4 block md:table-cell w-full md:w-[50px] align-middle\">\n        <div className=\"flex flex-col sm:flex-row items-center gap-4 md:gap-0\">\n          <img\n            src={imgSrc}\n            alt={`${user.first_name} ${user.last_name}`}\n            className=\"w-24 h-24 md:w-24 md:h-24 rounded-full\"\n            onError={handleImageError}\n          />\n          <div className=\"flex flex-col text-center sm:text-left md:hidden\">\n            <span className=\"text-xl font-bold dark:text-white\">\n              {user.first_name} {user.last_name}\n            </span>\n            <a\n              href={`mailto:${user.email}`}\n              className=\"text-blue-600 hover:underline dark:text-blue-400\"\n            >\n              {user.email}\n            </a>\n          </div>\n        </div>\n      </td>\n\n      <td className=\"hidden md:table-cell p-4 w-[25%] dark:text-white\">\n        <a\n          href={`mailto:${user.email}`}\n          className=\"text-blue-600 hover:underline dark:text-blue-400\"\n        >\n          {user.email}\n        </a>\n      </td>\n\n      {/* First Name column */}\n      <td className=\"hidden md:table-cell p-4 w-[20%] dark:text-white\">\n        {user.first_name}\n      </td>\n\n      {/* Last Name column */}\n      <td className=\"hidden md:table-cell p-4 w-[20%] dark:text-white\">\n        {user.last_name}\n      </td>\n\n      {/* Action buttons */}\n      <td className=\"p-4 block md:table-cell w-full md:w-[20%]\">\n        <div className=\"flex justify-center md:justify-start items-center h-full gap-2\">\n          <Link\n            to={`/edit/${user.id}`}\n            className=\"bg-blue-600 text-white p-2 px-4 rounded text-sm hover:bg-blue-700\"\n          >\n            Edit\n          </Link>\n          <button\n            type=\"button\"\n            className=\"bg-red-600 text-white p-2 px-4 rounded text-sm hover:bg-red-700\"\n            onClick={() => onDelete(user.id)}\n          >\n            Delete\n          </button>\n        </div>\n      </td>\n    </tr>\n  );\n});\n\nUserRow.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    email: PropTypes.string.isRequired,\n    first_name: PropTypes.string.isRequired,\n    last_name: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nUserRow.displayName = \"UserRow\";\n\nexport default UserRow;\n","import React from \"react\";\nimport { GrEdit } from \"react-icons/gr\";\nimport { MdDelete } from \"react-icons/md\";\n\nconst UserCard = ({ user, onDelete, onEdit, loading }) => {\n return (\n  <div className=\" relative flex flex-col items-center p-6 border border-gray-200 rounded-lg bg-white shadow-md group overflow-hidden dark:bg-gray-800 dark:border-gray-700\">\n   {/* User Avatar */}\n   <img\n    alt=\"avatar\"\n    src={\n     user.avatar || `https://i.pravatar.cc/120?u=${user.email || user.id}`\n    }\n    className=\"w-24 h-24 rounded-full object-cover flex-shrink-0 mb-4\"\n   />\n\n   {/* User Information */}\n   <div className=\"text-center\">\n    <div className=\"font-bold text-lg dark:text-white\">\n     {user.first_name} {user.last_name}\n    </div>\n    <div className=\"text-gray-500 text-sm dark:text-gray-400\">{user.email}</div>\n   </div>\n\n   {/* Buttons - Hidden by default, visible on hover */}\n   <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n    <div className=\"flex gap-4\">\n     <button\n      onClick={() => onEdit(user.id)}\n      className=\"p-4 bg-blue-600 text-white rounded-full transition-all duration-200 hover:bg-blue-700 active:scale-95 border-2 border-transparent hover:border-white\"\n      disabled={loading}\n     >\n      <GrEdit size=\"30px\" />\n     </button>\n     <button\n      className=\"p-4 bg-red-600 text-white rounded-full transition-all duration-200 hover:bg-red-700 active:scale-95 border-2 border-transparent hover:border-white\"\n      onClick={() => onDelete(user.id)}\n      disabled={loading}\n     >\n      <MdDelete size=\"30px\" />\n     </button>\n    </div>\n   </div>\n  </div>\n );\n};\n\nexport default UserCard;","import React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadUsers, removeUser, setPage } from \"../store/usersSlice\";\nimport Loader from \"../components/Loader\";\nimport UserRow from \"../components/UserRow\";\nimport UserCard from \"../components/UserCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiOutlineTable, AiOutlineSearch, AiOutlineClose } from \"react-icons/ai\";\nimport { BsCardList } from \"react-icons/bs\";\nimport { logout } from \"../store/authSlice\";\nimport { IoMdLogOut } from \"react-icons/io\";\n\nconst UsersPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { ids, entities, isLoadingList, isProcessingAction, page, total, per_page } = useSelector(\n    (state) => state.users\n  );\n  const [view, setView] = useState(\"table\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [processingItemId, setProcessingItemId] = useState(null);\n  const totalPages = useMemo(() => {\n    if (!per_page) return 1;\n    return Math.ceil(total / per_page);\n  }, [total, per_page]);\n\n  useEffect(() => {\n    dispatch(loadUsers(page));\n  }, [dispatch, page]);\n\n  const handleAction = async (action, userId) => {\n    setProcessingItemId(userId);\n    await dispatch(action(userId));\n    setProcessingItemId(null);\n  };\n\n  const handleDelete = (userId) => {\n    if (window.confirm(\"Delete this user?\")) {\n      handleAction(removeUser, userId);\n    }\n  };\n\n  const handleEdit = (userId) => {\n    navigate(`/edit/${userId}`);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  const handleClearSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  const userList = useMemo(\n    () => ids.map((id) => entities[id]).filter(Boolean),\n    [ids, entities]\n  );\n\n  const filteredUsers = userList.filter((user) => {\n    const query = searchQuery.toLowerCase();\n    return (\n      !query ||\n      user.email?.toLowerCase().includes(query) ||\n      user.first_name?.toLowerCase().includes(query) ||\n      user.last_name?.toLowerCase().includes(query)\n    );\n  });\n\n  const pageNumbers = useMemo(() => {\n    const pages = [];\n    const maxPageButtons = 5;\n    const startPage = Math.max(1, page - Math.floor(maxPageButtons / 2));\n    const endPage = Math.min(totalPages, startPage + maxPageButtons - 1);\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(i);\n    }\n    return pages;\n  }, [page, totalPages]);\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-4 sm:p-6 lg:p-8\">\n      {isLoadingList && <Loader />}\n      <div className=\"bg-white rounded shadow-sm dark:bg-gray-800\">\n        <div className=\"p-8 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6\">\n            <h2 className=\"text-2xl font-semibold dark:text-white\">Users</h2>\n            <button\n              onClick={handleLogout}\n              className=\"px-4 py-2 text-white bg-red-500 rounded-md hover:bg-red-600 transition duration-150\"\n            >\n              <IoMdLogOut size=\"20px\" />\n            </button>\n          </div>\n          <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between gap-4\">\n            <div className=\"view-toggle flex space-x-4\">\n              <button\n                onClick={() => setView(\"table\")}\n                className={`p-2.5 rounded border ${\n                  view === \"table\"\n                    ? \"bg-blue-100 border-blue-300 text-blue-600 dark:bg-blue-900 dark:border-blue-600 dark:text-white\"\n                    : \"border-gray-200 bg-transparent text-gray-600 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-400\"\n                }`}\n              >\n                <span className=\"flex justify-center items-center gap-2\">\n                  <AiOutlineTable size=\"25px\" />\n                  <span className=\"flex items-center text-base\">Table</span>\n                </span>\n              </button>\n              <button\n                onClick={() => setView(\"card\")}\n                className={`p-2.5 rounded border ${\n                  view === \"card\"\n                    ? \"bg-blue-100 border-blue-300 text-blue-600 dark:bg-blue-900 dark:border-blue-600 dark:text-white\"\n                    : \"border-gray-200 bg-transparent text-gray-600 dark:border-gray-700 dark:bg-gray-700 dark:text-gray-400\"\n                }`}\n              >\n                <span className=\"flex justify-center items-center gap-2\">\n                  <BsCardList size=\"25px\" />\n                  <span className=\"flex items-center text-base\">Card</span>\n                </span>\n              </button>\n            </div>\n            <div className=\"search-create flex flex-col md:flex-row items-start md:items-center space-y-4 md:space-y-0 md:space-x-4 w-full md:w-auto\">\n              <div className=\"relative w-full md:w-72\">\n                <input\n                  placeholder=\"input search text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"p-3 pl-4 pr-10 rounded border border-gray-200 w-full focus:outline-none focus:ring-2 focus:ring-blue-500 dark:border-gray-700 dark:bg-gray-700 dark:text-white\"\n                />\n                <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center\">\n                  {searchQuery && (\n                    <button\n                      onClick={handleClearSearch}\n                      className=\"text-gray-400 mr-2 dark:text-gray-300\"\n                    >\n                      <AiOutlineClose size=\"20px\" />\n                    </button>\n                  )}\n                  <AiOutlineSearch size=\"20px\" className=\"text-gray-400 dark:text-gray-300\" />\n                </div>\n              </div>\n              <button\n                className=\"bg-blue-600 text-white border-none p-3 px-4 rounded transition duration-150 hover:bg-blue-700 w-full md:w-auto\"\n                onClick={() => navigate(\"/create\")}\n              >\n                Create User\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"p-6 px-8\">\n          {filteredUsers.length === 0 && !isLoadingList && (\n            <p className=\"text-center text-gray-500 py-10 dark:text-white\">No users found.</p>\n          )}\n          {!isLoadingList && filteredUsers.length > 0 && view === \"table\" && (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border-collapse\">\n                <thead className=\"hidden md:table-header-group\">\n                  <tr>\n                    <th className=\"p-0 w-[40px] text-left bg-gray-50 text-gray-500 dark:bg-gray-700 dark:text-white\"></th>\n\n                    <th className=\"bg-gray-50 p-4 px-6 text-left text-gray-500 w-[20%] dark:bg-gray-700 dark:text-white\">\n                      Email\n                    </th>\n                    <th className=\"bg-gray-50 p-4 px-6 text-left text-gray-500 w-[20%] dark:bg-gray-700 dark:text-white\">\n                      First Name\n                    </th>\n                    <th className=\"bg-gray-50 p-4 px-6 text-left text-gray-500 w-[20%] dark:bg-gray-700 dark:text-white\">\n                      Last Name\n                    </th>\n                    <th className=\"bg-gray-50 p-4 px-6 text-left text-gray-500 w-[20%] dark:bg-gray-700 dark:text-white\">\n                      Action\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredUsers.map((user) => (\n                    <UserRow\n                      key={user.id}\n                      user={user}\n                      onDelete={handleDelete}\n                      onEdit={handleEdit}\n                      loading={isProcessingAction && processingItemId === user.id}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n          {!isLoadingList && filteredUsers.length > 0 && view === \"card\" && (\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 p-4\">\n              {filteredUsers.map((user) => (\n                <UserCard\n                  key={user.id}\n                  user={user}\n                  onDelete={handleDelete}\n                  onEdit={handleEdit}\n                  loading={isProcessingAction && processingItemId === user.id}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n        <div className=\"p-4 border-t border-gray-200 flex justify-end dark:border-gray-700\">\n          <div className=\"flex gap-4 items-center\">\n            <button\n              disabled={page <= 1}\n              onClick={() => dispatch(setPage(page - 1))}\n              className=\"p-1.5 px-2 rounded border border-gray-300 bg-white text-sm disabled:opacity-50 dark:bg-gray-800 dark:border-gray-600 dark:text-white\"\n            >\n              ‹\n            </button>\n            {pageNumbers.map((pageNumber) => (\n              <button\n                key={pageNumber}\n                onClick={() => dispatch(setPage(pageNumber))}\n                className={`p-1.5 px-2 rounded border text-sm ${\n                  pageNumber === page\n                    ? \"bg-blue-600 text-white border-blue-600\"\n                    : \"bg-white text-gray-700 border-gray-300 dark:bg-gray-800 dark:text-white dark:border-gray-600\"\n                }`}\n              >\n                {pageNumber}\n              </button>\n            ))}\n            <button\n              disabled={page >= totalPages}\n              onClick={() => dispatch(setPage(page + 1))}\n              className=\"p-1.5 px-2 rounded border border-gray-300 bg-white text-sm disabled:opacity-50 dark:bg-gray-800 dark:border-gray-600 dark:text-white\"\n            >\n              ›\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UsersPage;"],"names":["Loader","_jsx","className","children","src","loadingGif","alt","UserRow","memo","_ref","user","onDelete","avatarSrc","avatar","concat","id","imgSrc","setImgSrc","React","_jsxs","first_name","last_name","onError","handleImageError","href","email","Link","to","type","onClick","displayName","onEdit","loading","disabled","GrEdit","size","MdDelete","UsersPage","dispatch","useDispatch","navigate","useNavigate","ids","entities","isLoadingList","isProcessingAction","page","total","per_page","useSelector","state","users","view","setView","useState","searchQuery","setSearchQuery","processingItemId","setProcessingItemId","totalPages","useMemo","Math","ceil","useEffect","loadUsers","handleDelete","userId","window","confirm","async","action","handleAction","removeUser","handleEdit","filteredUsers","map","filter","Boolean","_user$email","_user$first_name","_user$last_name","query","toLowerCase","includes","pageNumbers","pages","startPage","max","floor","maxPageButtons","endPage","min","i","push","handleLogout","logout","IoMdLogOut","AiOutlineTable","BsCardList","placeholder","value","onChange","e","target","handleClearSearch","AiOutlineClose","AiOutlineSearch","length","UserCard","setPage","pageNumber"],"sourceRoot":""}